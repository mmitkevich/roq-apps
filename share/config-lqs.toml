# lqs service

# specify mdata and trade gateways for symbols, see market::Info
[[market]]
    symbol          = ["BTC-PERPETUAL", "BTC-29MAR24", "BTC-1MAR24"]
    exchange        = "deribit"
    mdata_gateway   = "deribit"

[oms]
    # core::PositionSource::PORTFOLIO takes position from roq::PositionUpdate
    # core::PositionSource::ORDERS takes initial snapshot from roq::PositionUpdate, and updates position using roq::OrderUpdate (when fills or partial fills are detected)
    position_source     = "PORTFOLIO" # "ORDERS"

#  map account to portfolio (all account trades are collected into portfolio automatically using PositionUpdate or PositionUpdate + Orders)
[[account]]
    exchange        = "deribit"
    account         = "REN_DERIBIT"
    trade_gateway   = "deribit"
    portfolio       = "100"         # identifier of the portfolio, same as strategy_id for now
    portfolio_name  = "LG100"

# ban future order placements after order has been fully filled (separately each side of the book)
[[parameter]]
    strategy        = "100"
    label           = "oms:post_fill_timeout"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24"]
    exchange        = "deribit"
    account         = "REN_DERIBIT"
    value           = ["2000",                  "4000"]

# each strategy operates inside named portfolio
[[parameter]]
    strategy        = "100"
    label           = "core:portfolio"
    value           = "LG100"

# map each strategy instance to the portfolio, used to track positions

[[parameter]]
    strategy        = "100"
    label           = "lqs:enabled"
    value           = "true"        # false = do not do any trading for this strategy

# underlying symbol for each contract.
[[parameter]]
    strategy        = "100"
    label           = "lqs:underlying"
    exchange        = "deribit"        
    symbol          = ["BTC-PERPETUAL",             "BTC-29MAR24"]
    value           = ["lqs:BTC/USD",               "lqs:BTC/USD"]      # exchange:symbol

# underlying symbol for each contract.
[[parameter]]
    strategy        = "100"
    label           = "lqs:passive_mode"
    exchange        = "deribit"        
    symbol          = ["BTC-PERPETUAL",             "BTC-29MAR24"]
    value           = "CROSS" # ["CROSS",                      "CROSS"]             # CROSS, JOIN


# delta greek (price sensitivity to the underlying price)
[[parameter]]
    strategy        = "100"
    label           = "lqs:delta_greek"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",             "BTC-29MAR24"]
    value           = ["1",                         "1"]

# min delta (in USD) for the whole combination
[[parameter]]
    strategy        = "100"
    label           = "lqs:delta_min"
    exchange        = "lqs"                             # here exchanges is namespace for symbols published by the lqs service
    symbol          = "BTC/USD"    
    value           = "-1000"

# max delta (in USD) for the whole combination
[[parameter]]
    strategy        = "100"
    label           = "lqs:delta_max"
    exchange        = "lqs"    
    symbol          = "BTC/USD"
    value           = "1000"

# multiplier contract volume -> delta in USD
[[parameter]]
    strategy        = "100"
    label           = "lqs:delta_by_volume"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24"]
    value           = ["10",                     "10"]

# specify account to trade legs through
[[parameter]]
    strategy        = "100"
    label           = "lqs:account"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24",      "BTC-1MAR24"]
    value           = ["REN_DERIBIT",           "REN_DERIBIT",      "REN_DERIBIT"]

[[parameter]]
    strategy        = "100"
    label           = "lqs:buy_volume"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24",      "BTC-1MAR24"]
    value           = ["10",                   "10",                "10"]

[[parameter]]
    strategy        = "100"
    label           = "lqs:sell_volume"
    exchange        = "deribit"    
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24",      "BTC-1MAR"]
    value           = ["10",                   "10",                "10"]


### not-implemented yet
[[parameter]]
    strategy        = "100"
    label           = "lqs:price_threshold"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24"]
    value           = ["100",                   "100"]

[[parameter]]
    strategy        = "100"
    label           = "lqs:price_units"
    exchange        = "deribit"
    symbol          = ["BTC-PERPETUAL",         "BTC-29MAR24"]
    value           = ["BP",                    "BP"]

